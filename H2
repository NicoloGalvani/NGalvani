# -*- coding: utf-8 -*-
"""
Created on Sun Mar 22 12:39:08 2020

@author: Nicol√≤
"""

import numpy as np

#Atom1: 0.0,0.0,0.0; mass 1; 1 electron
#Atom2: 1.0,0.0,0.0; mass 1; 1 electron

#Energy precision per self consistent loop:
Precision = 1E-6

#INPUTS
Basis_per_atom = int(input("Basis per atom\n"))
N_Atoms = int(input("How many atoms?\n"))
alpha_list = input("Alpha values, divided by comma\n").split(',')
Alpha = np.array([float(i) for i in alpha_list])
Basis = Basis_per_atom*N_Atoms
R_n = np.arange(N_Atoms*3, dtype = float)
R_n = R_n.reshape(N_Atoms,3)
Z_n = np.arange(N_Atoms)

for i in range(N_Atoms):
    positions_list = input(("Atom {0} given as x,y,z\n").format(i)).split(',')
    R_n[i][:] = [float(i) for i in positions_list]
    Z_n[i] = int(input(("Atomic number {0} given as integer\n").format(i)))






#with gaussian basis functions



#8 basis functions, with 8 eigenvalues





#Overlap matrix elements
S = np.array(64)
S = S.reshape((8,8))

for q in range(8):
    for p in range(q):
        S[p,q] = (np.pi/(Alpha[p]-Alpha[q]))

#After each iteratin of the SCF loop it prints the
#8 Eigenvalues e_k



#Print the energy file
